/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-10-23 08:23:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class vdoctabs3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html ng-app=\"ui.bootstrap.demo\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; Charset=iso-8859-1\">\r\n");
      out.write("<script src=\"js/ng/angular.min.js\"></script>\r\n");
      out.write("<script src=\"js/ng/angular-animate.min.js\"></script>\r\n");
      out.write("<script src=\"js/ng/ui-bootstrap-tpls-0.14.3.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"js/ng/bootstrap.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body ng-app leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 style=\"background-color: silver;\">\r\n");
      out.write("<div ng-controller=\"TabsCtrl\">\r\n");
      out.write("<uib-tabset>\r\n");
      out.write("  <uib-tab heading=\"VDoc\"      select=\"tabSwitch('treemenu.jsp?what=vdoc' )\"></uib-tab>\r\n");
 String usertype = (String) session.getAttribute("usertype");
if (usertype.equals("X")) { 
      out.write("\r\n");
      out.write("  <uib-tab heading=\"VDir\"      select=\"tabSwitch('treemenu.jsp?what=vdir')\"></uib-tab>\r\n");
      out.write("  <uib-tab heading=\"Abt.\"      select=\"tabSwitch('treemenu.jsp?what=user')\"></uib-tab>\r\n");
      out.write("  <uib-tab heading=\"Statistik\" select=\"tabSwitch('vstatistik.jsp')\"></uib-tab>\r\n");
}
      out.write("\r\n");
      out.write("</uib-tabset>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script language=\"JavaScript\" type=\"text/javascript\">\r\n");
      out.write("angular.module('ui.bootstrap.demo', ['ngAnimate', 'ui.bootstrap']);\r\n");
      out.write("angular.module('ui.bootstrap.demo').controller('TabsCtrl', function ($scope, $window) {\r\n");
      out.write("  $scope.tabs = [];\r\n");
      out.write("  $scope.alertMe = function() {\r\n");
      out.write("    setTimeout(function() {\r\n");
      out.write("      $window.alert('Sie haben Alert selectiert');\r\n");
      out.write("    });\r\n");
      out.write("  };\r\n");
      out.write("\r\n");
      out.write("  $scope.tabSwitch = function(url) {\r\n");
      out.write("    setTimeout(function() {\r\n");
      out.write("      tabSwitch(url);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("  };\r\n");
      out.write("});\r\n");
      out.write("function tabSwitch(v)\r\n");
      out.write("{ if (v == \"#\") return;\r\n");
      out.write("   parent.frames.menu.location = v;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
